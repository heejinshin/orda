syntax = "proto3";

package model;

import "model.proto";

message RequestHeader {
    string version = 1;
    uint32 seq = 2;
    oneof type {
        TypeRequest typeRequest = 3;
        TypeResponse typeReply = 4;
    }
}

message ResponseHeader {
    TypeResponse type = 1;
}

enum TypeRequest {
    PUSHPULL_REQUEST = 0;
    CLIENT_REQUEST = 1;
}


message ClientRequest {
    RequestHeader header = 1;
    Client client = 2;
}

enum TypeResponse {
    PUSHPULL_REPLY = 0;
    CLIENT_REPLY = 1;
}

enum TypeResponseStates {
    OK = 0;
    ERR_CLIENT_INVALID_COLLECTION = 101;
    ERR_CLIENT_INVALID_SYNCTYPE = 102;
}

message ResponseState {
    TypeResponseStates state = 1;
    string msg = 2;
}


message ClientResponse {
    RequestHeader header = 1;
    ResponseState state = 2;
}


message PushPullRequest {
    RequestHeader header = 1;
    int32 id = 2;
    repeated PushPullPack pushPullPacks = 3;
}

message PushPullResponse {
    ResponseHeader header = 1;
    int32 id = 2;
    repeated PushPullPack pushPullPacks = 3;
}

service OrtooService {
    rpc ProcessPushPull (PushPullRequest) returns (PushPullResponse);
    rpc ProcessClient (ClientRequest) returns (ClientResponse);
}

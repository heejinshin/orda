syntax = "proto3";

package model;

import "model.proto";

message RequestHeader {
    string version = 1;
    uint32 seq = 2;
    oneof type {
        TypeRequests typeRequest = 3;
        TypeReplies typeReply = 4;
    }
}

message ReplyHeader {
    TypeReplies type = 1;
}

enum TypeRequests {
    PUSHPULL_REQUEST = 0;
    CLIENT_REQUEST = 1;
}


message ClientRequest {
    RequestHeader header = 1;
    Client client = 2;
}

enum TypeReplies {
    PUSHPULL_REPLY = 0;
    CLIENT_REPLY = 1;
}

enum TypeReplyStates {
    OK = 0;
    ERR_CLIENT_INVALID_COLLECTION = 101;
    ERR_CLIENT_INVALID_SYNCTYPE = 102;
}

message ReplyState {
    TypeReplyStates state = 1;
    string msg = 2;
}


message ClientReply {
    RequestHeader header = 1;
    ReplyState state = 2;
}


message PushPullRequest {
    RequestHeader header = 1;
    int32 id = 2;
    repeated PushPullPack pushPullPacks = 3;
}

message PushPullReply {
    ReplyHeader header = 1;
    int32 id = 2;
    repeated PushPullPack pushPullPacks = 3;
}

service OrtooService {
    rpc ProcessPushPull (PushPullRequest) returns (PushPullReply);
    rpc ClientCreate (ClientRequest) returns (ClientReply);
}

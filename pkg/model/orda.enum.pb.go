// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: orda.enum.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SyncType int32

const (
	SyncType_LOCAL_ONLY SyncType = 0
	SyncType_MANUALLY   SyncType = 1
	SyncType_REALTIME   SyncType = 2
)

var SyncType_name = map[int32]string{
	0: "LOCAL_ONLY",
	1: "MANUALLY",
	2: "REALTIME",
}

var SyncType_value = map[string]int32{
	"LOCAL_ONLY": 0,
	"MANUALLY":   1,
	"REALTIME":   2,
}

func (x SyncType) String() string {
	return proto.EnumName(SyncType_name, int32(x))
}

func (SyncType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2c023da940addc3, []int{0}
}

type ClientType int32

const (
	ClientType_PERSISTENT ClientType = 0
	ClientType_EPHEMERAL  ClientType = 1
)

var ClientType_name = map[int32]string{
	0: "PERSISTENT",
	1: "EPHEMERAL",
}

var ClientType_value = map[string]int32{
	"PERSISTENT": 0,
	"EPHEMERAL":  1,
}

func (x ClientType) String() string {
	return proto.EnumName(ClientType_name, int32(x))
}

func (ClientType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2c023da940addc3, []int{1}
}

type TypeOfOperation int32

const (
	TypeOfOperation_NO_OP            TypeOfOperation = 0
	TypeOfOperation_ERROR            TypeOfOperation = 1
	TypeOfOperation_TRANSACTION      TypeOfOperation = 2
	TypeOfOperation_COUNTER_SNAPSHOT TypeOfOperation = 10
	TypeOfOperation_COUNTER_INCREASE TypeOfOperation = 11
	TypeOfOperation_MAP_SNAPSHOT     TypeOfOperation = 20
	TypeOfOperation_MAP_PUT          TypeOfOperation = 21
	TypeOfOperation_MAP_REMOVE       TypeOfOperation = 22
	TypeOfOperation_LIST_SNAPSHOT    TypeOfOperation = 30
	TypeOfOperation_LIST_INSERT      TypeOfOperation = 31
	TypeOfOperation_LIST_DELETE      TypeOfOperation = 32
	TypeOfOperation_LIST_UPDATE      TypeOfOperation = 33
	TypeOfOperation_DOC_SNAPSHOT     TypeOfOperation = 40
	TypeOfOperation_DOC_OBJ_PUT      TypeOfOperation = 41
	TypeOfOperation_DOC_OBJ_RMV      TypeOfOperation = 42
	TypeOfOperation_DOC_ARR_INS      TypeOfOperation = 43
	TypeOfOperation_DOC_ARR_DEL      TypeOfOperation = 44
	TypeOfOperation_DOC_ARR_UPD      TypeOfOperation = 45
)

var TypeOfOperation_name = map[int32]string{
	0:  "NO_OP",
	1:  "ERROR",
	2:  "TRANSACTION",
	10: "COUNTER_SNAPSHOT",
	11: "COUNTER_INCREASE",
	20: "MAP_SNAPSHOT",
	21: "MAP_PUT",
	22: "MAP_REMOVE",
	30: "LIST_SNAPSHOT",
	31: "LIST_INSERT",
	32: "LIST_DELETE",
	33: "LIST_UPDATE",
	40: "DOC_SNAPSHOT",
	41: "DOC_OBJ_PUT",
	42: "DOC_OBJ_RMV",
	43: "DOC_ARR_INS",
	44: "DOC_ARR_DEL",
	45: "DOC_ARR_UPD",
}

var TypeOfOperation_value = map[string]int32{
	"NO_OP":            0,
	"ERROR":            1,
	"TRANSACTION":      2,
	"COUNTER_SNAPSHOT": 10,
	"COUNTER_INCREASE": 11,
	"MAP_SNAPSHOT":     20,
	"MAP_PUT":          21,
	"MAP_REMOVE":       22,
	"LIST_SNAPSHOT":    30,
	"LIST_INSERT":      31,
	"LIST_DELETE":      32,
	"LIST_UPDATE":      33,
	"DOC_SNAPSHOT":     40,
	"DOC_OBJ_PUT":      41,
	"DOC_OBJ_RMV":      42,
	"DOC_ARR_INS":      43,
	"DOC_ARR_DEL":      44,
	"DOC_ARR_UPD":      45,
}

func (x TypeOfOperation) String() string {
	return proto.EnumName(TypeOfOperation_name, int32(x))
}

func (TypeOfOperation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2c023da940addc3, []int{2}
}

type StateOfDatatype int32

const (
	StateOfDatatype_DUE_TO_CREATE           StateOfDatatype = 0
	StateOfDatatype_DUE_TO_SUBSCRIBE        StateOfDatatype = 1
	StateOfDatatype_DUE_TO_SUBSCRIBE_CREATE StateOfDatatype = 2
	StateOfDatatype_SUBSCRIBED              StateOfDatatype = 3
	StateOfDatatype_DUE_TO_UNSUBSCRIBE      StateOfDatatype = 4
	StateOfDatatype_CLOSED                  StateOfDatatype = 5
	StateOfDatatype_DELETED                 StateOfDatatype = 6
)

var StateOfDatatype_name = map[int32]string{
	0: "DUE_TO_CREATE",
	1: "DUE_TO_SUBSCRIBE",
	2: "DUE_TO_SUBSCRIBE_CREATE",
	3: "SUBSCRIBED",
	4: "DUE_TO_UNSUBSCRIBE",
	5: "CLOSED",
	6: "DELETED",
}

var StateOfDatatype_value = map[string]int32{
	"DUE_TO_CREATE":           0,
	"DUE_TO_SUBSCRIBE":        1,
	"DUE_TO_SUBSCRIBE_CREATE": 2,
	"SUBSCRIBED":              3,
	"DUE_TO_UNSUBSCRIBE":      4,
	"CLOSED":                  5,
	"DELETED":                 6,
}

func (x StateOfDatatype) String() string {
	return proto.EnumName(StateOfDatatype_name, int32(x))
}

func (StateOfDatatype) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2c023da940addc3, []int{3}
}

type StateOfResponse int32

const (
	StateOfResponse_OK                            StateOfResponse = 0
	StateOfResponse_ERR_CLIENT_INVALID_COLLECTION StateOfResponse = 101
	StateOfResponse_ERR_CLIENT_INVALID_SYNC_TYPE  StateOfResponse = 102
)

var StateOfResponse_name = map[int32]string{
	0:   "OK",
	101: "ERR_CLIENT_INVALID_COLLECTION",
	102: "ERR_CLIENT_INVALID_SYNC_TYPE",
}

var StateOfResponse_value = map[string]int32{
	"OK":                            0,
	"ERR_CLIENT_INVALID_COLLECTION": 101,
	"ERR_CLIENT_INVALID_SYNC_TYPE":  102,
}

func (x StateOfResponse) String() string {
	return proto.EnumName(StateOfResponse_name, int32(x))
}

func (StateOfResponse) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2c023da940addc3, []int{4}
}

type RequestType int32

const (
	RequestType_CLIENTS   RequestType = 0
	RequestType_PUSHPULLS RequestType = 1
)

var RequestType_name = map[int32]string{
	0: "CLIENTS",
	1: "PUSHPULLS",
}

var RequestType_value = map[string]int32{
	"CLIENTS":   0,
	"PUSHPULLS": 1,
}

func (x RequestType) String() string {
	return proto.EnumName(RequestType_name, int32(x))
}

func (RequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2c023da940addc3, []int{5}
}

type TypeOfDatatype int32

const (
	TypeOfDatatype_COUNTER  TypeOfDatatype = 0
	TypeOfDatatype_MAP      TypeOfDatatype = 1
	TypeOfDatatype_LIST     TypeOfDatatype = 2
	TypeOfDatatype_DOCUMENT TypeOfDatatype = 3
)

var TypeOfDatatype_name = map[int32]string{
	0: "COUNTER",
	1: "MAP",
	2: "LIST",
	3: "DOCUMENT",
}

var TypeOfDatatype_value = map[string]int32{
	"COUNTER":  0,
	"MAP":      1,
	"LIST":     2,
	"DOCUMENT": 3,
}

func (x TypeOfDatatype) String() string {
	return proto.EnumName(TypeOfDatatype_name, int32(x))
}

func (TypeOfDatatype) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2c023da940addc3, []int{6}
}

func init() {
	proto.RegisterEnum("orda.SyncType", SyncType_name, SyncType_value)
	proto.RegisterEnum("orda.ClientType", ClientType_name, ClientType_value)
	proto.RegisterEnum("orda.TypeOfOperation", TypeOfOperation_name, TypeOfOperation_value)
	proto.RegisterEnum("orda.StateOfDatatype", StateOfDatatype_name, StateOfDatatype_value)
	proto.RegisterEnum("orda.StateOfResponse", StateOfResponse_name, StateOfResponse_value)
	proto.RegisterEnum("orda.RequestType", RequestType_name, RequestType_value)
	proto.RegisterEnum("orda.TypeOfDatatype", TypeOfDatatype_name, TypeOfDatatype_value)
}

func init() { proto.RegisterFile("orda.enum.proto", fileDescriptor_f2c023da940addc3) }

var fileDescriptor_f2c023da940addc3 = []byte{
	// 551 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xcf, 0x4e, 0xdb, 0x4c,
	0x14, 0xc5, 0xed, 0x00, 0x09, 0xdc, 0x00, 0xb9, 0x8c, 0xf8, 0xf8, 0x54, 0xb5, 0x4d, 0x61, 0x57,
	0x4c, 0xcb, 0xa6, 0x52, 0x37, 0x95, 0x2a, 0x4d, 0x3c, 0x57, 0xc2, 0xed, 0x78, 0x66, 0x34, 0x33,
	0x46, 0x4a, 0x17, 0xb5, 0xd2, 0x62, 0x24, 0x24, 0x48, 0x52, 0x30, 0x0b, 0xde, 0x84, 0xc7, 0xe9,
	0xb2, 0xcb, 0x3e, 0x42, 0x45, 0x5f, 0xa4, 0x1a, 0x0c, 0x49, 0x54, 0x75, 0xe7, 0xf9, 0xe9, 0xdc,
	0x3f, 0x3a, 0xf7, 0x18, 0x7a, 0x93, 0xcb, 0x93, 0xd1, 0x61, 0x35, 0xbe, 0xbe, 0x38, 0x9c, 0x5e,
	0x4e, 0xea, 0x09, 0x5b, 0x0e, 0x20, 0x79, 0x0b, 0xab, 0xee, 0x66, 0xfc, 0xd5, 0xdf, 0x4c, 0x2b,
	0xb6, 0x09, 0x20, 0x75, 0xca, 0x65, 0xa9, 0x95, 0x1c, 0x62, 0xc4, 0xd6, 0x61, 0x35, 0xe7, 0xaa,
	0xe0, 0x52, 0x0e, 0x31, 0x0e, 0x2f, 0x4b, 0x5c, 0xfa, 0x2c, 0x27, 0x6c, 0x25, 0x07, 0x00, 0xe9,
	0xf9, 0x59, 0x35, 0xae, 0x1f, 0x2b, 0x0d, 0x59, 0x97, 0x39, 0x4f, 0xca, 0x63, 0xc4, 0x36, 0x60,
	0x8d, 0xcc, 0x11, 0xe5, 0x64, 0xb9, 0xc4, 0x38, 0xf9, 0xde, 0x82, 0x5e, 0xd0, 0xe9, 0x53, 0x3d,
	0xad, 0x2e, 0x47, 0xf5, 0xd9, 0x64, 0xcc, 0xd6, 0x60, 0x45, 0xe9, 0x52, 0x1b, 0x8c, 0xc2, 0x27,
	0x59, 0xab, 0x2d, 0xc6, 0xac, 0x07, 0x5d, 0x6f, 0xb9, 0x72, 0x3c, 0xf5, 0x99, 0x56, 0xd8, 0x62,
	0xdb, 0x80, 0xa9, 0x2e, 0x94, 0x27, 0x5b, 0x3a, 0xc5, 0x8d, 0x3b, 0xd2, 0x1e, 0x61, 0x91, 0x66,
	0x2a, 0xb5, 0xc4, 0x1d, 0x61, 0x97, 0x21, 0xac, 0xe7, 0xdc, 0xcc, 0x75, 0xdb, 0xac, 0x0b, 0x9d,
	0x40, 0x4c, 0xe1, 0xf1, 0xbf, 0xb0, 0x64, 0x78, 0x58, 0xca, 0xf5, 0x31, 0xe1, 0x0e, 0xdb, 0x82,
	0x0d, 0x99, 0x39, 0x3f, 0xd7, 0xf7, 0xc3, 0xf8, 0x7b, 0x94, 0x29, 0x47, 0xd6, 0xe3, 0x8b, 0x19,
	0x10, 0x24, 0xc9, 0x13, 0xee, 0xce, 0x40, 0x61, 0x04, 0xf7, 0x84, 0x7b, 0x61, 0xa8, 0xd0, 0xe9,
	0xbc, 0xc9, 0xcb, 0x20, 0x09, 0x44, 0x0f, 0x3e, 0xdc, 0x0f, 0xde, 0x5f, 0x04, 0x36, 0x3f, 0xc6,
	0xe4, 0x11, 0x70, 0x1b, 0xd6, 0x77, 0x78, 0xb0, 0x08, 0x04, 0x49, 0x7c, 0xb5, 0x08, 0x0a, 0x23,
	0xf0, 0x75, 0x72, 0x1b, 0x43, 0xcf, 0xd5, 0xa3, 0xba, 0xd2, 0xa7, 0x62, 0x54, 0x8f, 0xea, 0xe0,
	0xfa, 0x16, 0x6c, 0x88, 0x82, 0x4a, 0xaf, 0xcb, 0x60, 0x81, 0x27, 0x8c, 0x82, 0x31, 0x0f, 0xc8,
	0x15, 0x03, 0x97, 0xda, 0x6c, 0x40, 0x18, 0xb3, 0xa7, 0xf0, 0xff, 0xdf, 0xf4, 0xb1, 0xa4, 0x15,
	0x6c, 0x99, 0x51, 0x81, 0x4b, 0x6c, 0x07, 0xd8, 0x83, 0xb8, 0x50, 0xf3, 0x26, 0xcb, 0x0c, 0xa0,
	0x9d, 0x4a, 0xed, 0x48, 0xe0, 0x4a, 0xf0, 0xb5, 0x71, 0x44, 0x60, 0x3b, 0xf9, 0x3c, 0xdb, 0xcc,
	0x56, 0x57, 0xd3, 0xc9, 0xf8, 0xaa, 0x62, 0x6d, 0x68, 0xe9, 0x8f, 0x18, 0xb1, 0x3d, 0x78, 0x4e,
	0xd6, 0x96, 0xa9, 0xcc, 0x48, 0x05, 0x57, 0x8f, 0xb9, 0xcc, 0x44, 0x99, 0x6a, 0x29, 0xa9, 0x39,
	0x70, 0xc5, 0x76, 0xe1, 0xd9, 0x3f, 0x24, 0x6e, 0xa8, 0xd2, 0xd2, 0x0f, 0x0d, 0xe1, 0x69, 0xb2,
	0x0f, 0x5d, 0x5b, 0x7d, 0xbb, 0xae, 0xae, 0x9a, 0xac, 0x75, 0xa1, 0xd3, 0x88, 0x5d, 0x13, 0x34,
	0x53, 0xb8, 0x23, 0x53, 0x48, 0xe9, 0x30, 0x4e, 0xde, 0xc3, 0x66, 0x93, 0xb3, 0x99, 0x47, 0x41,
	0xdd, 0x24, 0x05, 0x23, 0xd6, 0x81, 0xa5, 0x9c, 0x1b, 0x8c, 0xd9, 0x2a, 0x2c, 0x87, 0x2b, 0x62,
	0x2b, 0xa4, 0x5a, 0xe8, 0xb4, 0xc8, 0x43, 0x6e, 0x97, 0x06, 0x4f, 0x7e, 0xdc, 0xf5, 0xe3, 0x9f,
	0x77, 0xfd, 0xf8, 0xd7, 0x5d, 0x3f, 0xbe, 0xfd, 0xdd, 0x8f, 0x3e, 0x75, 0x0e, 0xdf, 0x5d, 0x4c,
	0x4e, 0xaa, 0xf3, 0x2f, 0xed, 0xfb, 0xbf, 0xe6, 0xcd, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe2,
	0x61, 0x35, 0x71, 0x48, 0x03, 0x00, 0x00,
}
